version: '3'

networks:
  local_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.12.1.0/24

services:
  mysql:
    image: 'mysql:8.0.17'
    environment:
      MYSQL_ROOT_PASSWORD: mysql_password
    ports:
      - 3306:3306
    volumes:
      - ./mysql_init:/docker-entrypoint-initdb.d
    networks:
      local_net:
        ipv4_address: 172.12.1.2
  mongo:
    image: 'mongo:4.2.0'
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    ports:
      - 27017:27017
    networks:
      local_net:
        ipv4_address: 172.12.1.9
  redis-mq:
    image: 'redis:5.0.5'
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - 6379:6379
    networks:
      local_net:
        ipv4_address: 172.12.1.3
  api-server:
    build:
      context: .
      dockerfile: apiserver/Dockerfile
      args:
        - WORKER_COUNT=1
    ports:
      - 80:8080
    environment:
      ENV: dev
      API_SERVER__MYSQL__HOST: 172.12.1.2
      API_SERVER__MYSQL__USER: root
      API_SERVER__MYSQL__PASSWORD: mysql_password
      API_SERVER__MONGO__HOST: 172.12.1.9
      API_SERVER__MONGO__USER: mongo_user
      API_SERVER__MONGO__PASSWORD: mongo_password
      API_SERVER__REDIS__HOST: 172.12.1.3
      API_SERVER__REDIS__PASSWORD: redis_password
      API_SERVER__INTERNAL_API_KEYS: internal_key_1,internal_key_2
    networks:
      local_net:
        ipv4_address: 172.12.1.4
    restart: unless-stopped
    depends_on:
      - mysql
      - redis-mq
  messaging-worker:
    build:
      context: .
      dockerfile: worker/messaging/Dockerfile
    volumes:
      - ${PUSH_WORKER__FCM__V1__KEY_FILE_NAME:-./messaging}:/fcm_service_account.json
      - ${PUSH_WORKER__APNS__PEM_CERT__FILE_NAME:-./messaging}:/apns.pem
      - ${PUSH_WORKER__APNS__P8_CERT__FILE_NAME:-./messaging}:/apns.p8
    environment:
      ENV: dev
      PUSH_WORKER__POOL_SIZE: 1
      PUSH_WORKER__REDIS__PASSWORD: redis_password
      PUSH_WORKER__REDIS__HOST: 172.12.1.3
      PUSH_WORKER__FCM__LEGACY__SERVER_KEY: ${PUSH_WORKER__FCM__LEGACY__SERVER_KEY:-empty}
      PUSH_WORKER__FCM__V1__KEY_FILE_NAME: /fcm_service_account.json
      PUSH_WORKER__FCM__V1__PROJECT_ID: ${PUSH_WORKER__FCM__V1__PROJECT_ID:-empty}
      PUSH_WORKER__FCM__CLIENT: ${PUSH_WORKER__FCM__CLIENT}
      PUSH_WORKER__APNS__PEM_CERT__FILE_NAME: /apns.pem
      PUSH_WORKER__APNS__P8_CERT__FILE_NAME: /apns.p8
      PUSH_WORKER__APNS__P8_CERT__KEY_ID: ${PUSH_WORKER__APNS__P8_CERT__KEY_ID:-empty}
      PUSH_WORKER__APNS__P8_CERT__TEAM_ID: ${PUSH_WORKER__APNS__P8_CERT__TEAM_ID:-empty}
      PUSH_WORKER__APNS__P8_CERT__TOPIC: ${PUSH_WORKER__APNS__P8_CERT__TOPIC:-empty}
      PUSH_WORKER__APNS__CERT_TYPE: ${PUSH_WORKER__APNS__CERT_TYPE}
    networks:
      local_net:
        ipv4_address: 172.12.1.5
    restart: unless-stopped
    depends_on:
      - mysql
      - redis-mq
  notification-worker:
    build:
      context: .
      dockerfile: worker/notification/Dockerfile
    environment:
      ENV: dev
      NOTIFICATION_WORKER__POOL_SIZE: 1
      NOTIFICATION_WORKER__REDIS__PASSWORD: redis_password
      NOTIFICATION_WORKER__REDIS__HOST: 172.12.1.3
      NOTIFICATION_WORKER__EXTERNAL__JRAZE__BASE_URL: http://172.12.1.4:8080/
      NOTIFICATION_WORKER__EXTERNAL__JRAZE__X_SERVER_KEY: internal_key_1
    networks:
      local_net:
        ipv4_address: 172.12.1.7
    restart: unless-stopped
    depends_on:
      - mysql
      - redis-mq
  notification-batch:
    build:
      context: .
      dockerfile: batch/notification/Dockerfile
    environment:
      ENV: dev
      NOTIFICATION_BATCH__REDIS__PASSWORD: redis_password
      NOTIFICATION_BATCH__REDIS__HOST: 172.12.1.3
      NOTIFICATION_BATCH__EXTERNAL__JRAZE__BASE_URL: http://172.12.1.4:8080/
      NOTIFICATION_BATCH__EXTERNAL__JRAZE__X_SERVER_KEY: internal_key_1
    networks:
      local_net:
        ipv4_address: 172.12.1.8
    restart: unless-stopped
    depends_on:
      - mysql
      - redis-mq